version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: sef-postgres-dev
    environment:
      POSTGRES_DB: sef_efakture_dev
      POSTGRES_USER: sef_user
      POSTGRES_PASSWORD: sef_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sef_user -d sef_efakture_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sef-dev-network

  # Redis for Development
  redis:
    image: redis:7-alpine
    container_name: sef-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sef-dev-network

  # Backend Development
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: sef-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://sef_user:sef_password@postgres:5432/sef_efakture_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      WEBHOOK_SECRET: dev-webhook-secret-change-in-production
      SEF_API_KEY: dev-sef-api-key
      FRONTEND_URL: http://localhost:3000
      CORS_ORIGINS: http://localhost:3000,http://localhost:3001
      LOG_LEVEL: debug
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - /app/backend/node_modules
      - /app/shared/node_modules
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev
    networks:
      - sef-dev-network

  # Frontend Development
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    container_name: sef-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3001
    volumes:
      - ./frontend:/app/frontend
      - ./shared:/app/shared
      - /app/frontend/node_modules
      - /app/shared/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    command: npm run dev
    networks:
      - sef-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  sef-dev-network:
    driver: bridge
